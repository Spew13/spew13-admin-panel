<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Spew13 Admin Panel</title>
<style>
  body { margin:0; font-family:'Courier New', monospace; background:black; color:limegreen; }
  /* Admin overlay */
  #adminOverlay {
    position:fixed; top:0; left:0; width:100vw; height:100vh;
    background:rgba(0,0,0,0.95);
    color:limegreen;
    z-index:9999;
    display:flex;
    flex-direction:column;
  }
  #adminHeader {
    padding:20px;
    font-size:28px;
    font-weight:bold;
    text-align:center;
    text-shadow:0 0 5px limegreen,0 0 10px limegreen;
    border-bottom:2px solid limegreen;
  }
  #adminTabs {
    display:flex;
    justify-content:center;
    border-bottom:1px solid limegreen;
  }
  .tabBtn {
    background:black;
    border:none;
    color:limegreen;
    padding:10px 20px;
    cursor:pointer;
    font-size:16px;
  }
  .tabBtn.active { background:limegreen; color:black; transition:0.3s; }
  #adminContent { flex:1; padding:20px; overflow:auto; }
  input, textarea { width:80%; padding:10px; margin:10px 0; background:black; border:1px solid limegreen; color:limegreen; font-family:'Courier New'; font-size:16px; }
  button { padding:10px 20px; margin:5px; background:black; border:2px solid limegreen; color:limegreen; cursor:pointer; font-size:16px; }
  button:hover { background:limegreen; color:black; transition:0.3s; }
  #announcementPreview { margin-top:20px; font-size:22px; text-shadow:0 0 5px limegreen,0 0 10px limegreen; }
</style>
</head>
<body>

<div id="adminOverlay">
  <div id="adminHeader">Spew13 Admin Panel</div>
  <div id="adminTabs">
    <button class="tabBtn active" onclick="showTab('announcements')">Announcements</button>
    <button class="tabBtn" onclick="showTab('games')">Games</button>
    <button class="tabBtn" onclick="showTab('users')">Users</button>
    <button class="tabBtn" onclick="showTab('settings')">Settings</button>
  </div>
  <div id="adminContent">
    <!-- Announcements Tab -->
    <div id="tab-announcements">
      <h3>Send Announcement</h3>
      <input type="text" id="announcementInput" placeholder="Type your message">
      <br>
      <button onclick="sendAnnouncement()">Send</button>
      <p id="adminMessage"></p>
      <div id="announcementPreview"></div>
    </div>

    <!-- Games Tab -->
    <div id="tab-games" style="display:none;">
      <h3>Game Controls</h3>
      <button onclick="loadGame('https://arstudios750.github.io/spew13gamble/')">Load Gamble Game</button>
      <button onclick="disableGame()">Disable Game</button>
    </div>

    <!-- Users Tab -->
    <div id="tab-users" style="display:none;">
      <h3>Connected Users</h3>
      <p>Feature coming soon!</p>
    </div>

    <!-- Settings Tab -->
    <div id="tab-settings" style="display:none;">
      <h3>Site Settings</h3>
      <button onclick="toggleFeature()">Toggle Example Feature</button>
    </div>
  </div>
</div>

<!-- Announcement Popup -->
<div id="announcementPopup" style="
  display:none; 
  position:fixed; 
  top:50%; 
  left:50%; 
  transform:translate(-50%, -50%);
  color:limegreen; 
  font-size:35px; 
  text-align:center; 
  text-shadow:0 0 5px limegreen,0 0 10px limegreen,0 0 20px limegreen;
  z-index:1000;
  padding:20px;
  background-color:rgba(0,0,0,0.8);
  border:2px solid limegreen;
  border-radius:10px;
"></div>

<script>
const binId = "68e12ed2ae596e708f05e933";
const popup = document.getElementById('announcementPopup');
const adminMessage = document.getElementById('adminMessage');
const announcementPreview = document.getElementById('announcementPreview');

// Tab switching
function showTab(tab){
  const tabs = ['announcements','games','users','settings'];
  tabs.forEach(t => document.getElementById('tab-'+t).style.display = (t===tab?'block':'none'));
  document.querySelectorAll('.tabBtn').forEach(btn => btn.classList.remove('active'));
  event.target.classList.add('active');
}

// Load announcements from JSONBin
async function loadAnnouncements(){
  try{
    const res = await fetch(`https://api.jsonbin.io/v3/b/${binId}/latest`);
    const data = await res.json();
    const messages = data.record;
    if(messages.length > 0){
      popup.innerHTML = messages.map(m => `<p>${m.text}</p>`).join('');
      popup.style.display = 'block';
      announcementPreview.innerHTML = messages.map(m => `<p>${m.text}</p>`).join('');
      setTimeout(()=>{popup.style.display='none';},8000);
    }
  } catch(err){ console.error(err);}
}
loadAnnouncements();
setInterval(loadAnnouncements,15000);

// Send announcement
async function sendAnnouncement(){
  const text = document.getElementById('announcementInput').value.trim();
  if(!text) return;
  try{
    const res = await fetch(`https://api.jsonbin.io/v3/b/${binId}/latest`);
    const data = await res.json();
    const messages = data.record || [];
    messages.push({text:text});
    await fetch(`https://api.jsonbin.io/v3/b/${binId}`,{
      method:'PUT',
      headers:{
        'Content-Type':'application/json',
        'X-Master-Key':'YOUR_JSONBIN_API_KEY' // replace if private bin
      },
      body: JSON.stringify(messages)
    });
    adminMessage.textContent = "Announcement sent!";
    document.getElementById('announcementInput').value="";
    loadAnnouncements();
  } catch(err){
    console.error(err);
    adminMessage.textContent = "Failed to send.";
  }
}

// Example game/load functions
function loadGame(url){
  document.body.innerHTML += `<iframe src="${url}" style="position:fixed; top:0; left:0; width:100vw; height:100vh; border:none; z-index:1000;"></iframe>`;
}
function disableGame(){ alert("Game disabled!"); }
function toggleFeature(){ alert("Feature toggled!"); }

</script>
</body>
</html>
